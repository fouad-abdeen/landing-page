[{"F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\index.js":"1","F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\reportWebVitals.js":"2","F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\App\\App.js":"3","F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\links.js":"4","F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\useFetch.js":"5","F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\Header\\Header.js":"6","F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\Footer\\Footer.js":"7","F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\Bar\\Bar.js":"8","F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\Body\\Body.js":"9","F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\App\\Dummy.js":"10"},{"size":482,"mtime":1615462033903,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":2496,"mtime":1615478851036,"results":"14","hashOfConfig":"12"},{"size":530,"mtime":1615478520750,"results":"15","hashOfConfig":"12"},{"size":786,"mtime":1615477977667,"results":"16","hashOfConfig":"12"},{"size":275,"mtime":1614820812248,"results":"17","hashOfConfig":"12"},{"size":2214,"mtime":1615478158734,"results":"18","hashOfConfig":"12"},{"size":3024,"mtime":1615415513177,"results":"19","hashOfConfig":"12"},{"size":7537,"mtime":1615418454030,"results":"20","hashOfConfig":"12"},{"size":362,"mtime":1615471708961,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ajhi6i",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\index.js",[],["45","46"],"F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\reportWebVitals.js",[],"F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\App\\App.js",[],"F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\links.js",[],"F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\useFetch.js",[],"F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\Header\\Header.js",[],"F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\Footer\\Footer.js",["47","48"],"F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\Bar\\Bar.js",["49","50","51","52"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Bar.scss\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faFacebook } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faInstagram } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Bar = (props) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const urls = props.urls.map((x) => x.url);\r\n  const title = props.info.map((x) => x.title);\r\n  const body = props.info.map((x) => x.body);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bar-icons\">\r\n        <a target=\"_blank\" href={urls[0]}>\r\n          <FontAwesomeIcon className=\"fa-2x sm-icon\" icon={faLinkedin} />\r\n        </a>\r\n        <a target=\"_blank\" href={urls[1]}>\r\n          <FontAwesomeIcon className=\"fa-2x sm-icon\" icon={faTwitter} />\r\n        </a>\r\n        <a target=\"_blank\" href={urls[2]}>\r\n          <FontAwesomeIcon className=\"fa-2x sm-icon\" icon={faFacebook} />\r\n        </a>\r\n        <a target=\"_blank\" href={urls[3]}>\r\n          <FontAwesomeIcon className=\"fa-2x sm-icon\" icon={faInstagram} />\r\n        </a>\r\n      </div>\r\n      <div className=\"bar-info\">\r\n        <button className=\"btn btn-sm info\" onClick={handleShow}>\r\n          <FontAwesomeIcon className=\"fa-2x\" icon={faQuestionCircle} />\r\n        </button>\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose} animation={false}>\r\n        <Modal.Header>\r\n          <Modal.Title>{props.lang === \"ar\" ? title[0] : title[1]}</Modal.Title>\r\n          <button\r\n            aria-label=\"close\"\r\n            style={{\r\n              float: \"right\",\r\n              backgroundColor: \"Transparent\",\r\n              border: \"none\",\r\n              outline: \"none\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={handleClose}\r\n          >\r\n            <FontAwesomeIcon className=\"fa-2x sm-icon\" icon={faTimes} />\r\n          </button>\r\n        </Modal.Header>\r\n        <Modal.Body>{props.lang === \"ar\" ? body[0] : body[1]}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button className=\"btn btn-dark close-btn\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Bar;\r\n\r\nconst infoArrayShape = PropTypes.shape({\r\n  title: PropTypes.string,\r\n  body: PropTypes.string,\r\n});\r\n\r\nconst urlsArrayShape = PropTypes.shape({\r\n  id: PropTypes.string,\r\n  url: PropTypes.string,\r\n});\r\n\r\nBar.propTypes = {\r\n  lang: PropTypes.string,\r\n  info: PropTypes.arrayOf(infoArrayShape),\r\n  urls: PropTypes.arrayOf(urlsArrayShape),\r\n};\r\n\r\nBar.defaultProps = {\r\n  lang: \"ar\",\r\n};\r\n","F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\Body\\Body.js",["53","54"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Body.scss\";\r\nimport { Popover, OverlayTrigger } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faReadme } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Body = (props) => {\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-white body-title\">\r\n        {props.lang === \"ar\"\r\n          ? props.titles.map((x) => x.ar)[0]\r\n          : props.titles.map((x) => x.en)[0]}\r\n      </h3>\r\n      <div className=\"body-row\">\r\n        <div className=\"_row\" />\r\n      </div>\r\n      <h6 className=\"message text-white\">\r\n        <i>\r\n          {props.lang === \"ar\"\r\n            ? props.paragraphs.map((x) => x.ar)[0]\r\n            : props.paragraphs.map((x) => x.en)[0]}\r\n        </i>\r\n      </h6>\r\n      {props.articles.map((x) => {\r\n        return (\r\n          <div key={x.id.toString()} className=\"body-buttons\">\r\n            <OverlayTrigger\r\n              trigger=\"click\"\r\n              placement=\"bottom\"\r\n              overlay={\r\n                <Popover>\r\n                  <Popover.Title as=\"h3\">\r\n                    {props.lang === \"ar\"\r\n                      ? props.paragraphs.map((x) => x.ar)[1]\r\n                      : props.paragraphs.map((x) => x.en)[1]}\r\n                  </Popover.Title>\r\n                  <Popover.Content>\r\n                    {props.lang === \"ar\" ? x.preview_ar : x.preview_en}\r\n                  </Popover.Content>\r\n                </Popover>\r\n              }\r\n            >\r\n              <button className=\"me-2 btn btn-sm btn-light btnInfo\">\r\n                <FontAwesomeIcon className=\"fa-2x\" icon={faReadme} />\r\n              </button>\r\n            </OverlayTrigger>\r\n            <div className=\"d-grid main-buttons\">\r\n              <button className=\"btn btn-light btn-lg body-btn\" type=\"button\">\r\n                <a className=\"body-links\" target=\"_blank\" href={x.link}>\r\n                  {props.lang === \"ar\" ? x.title_ar : x.title_en}\r\n                </a>\r\n              </button>\r\n            </div>\r\n            <OverlayTrigger\r\n              trigger=\"click\"\r\n              placement=\"bottom\"\r\n              overlay={\r\n                <Popover>\r\n                  <Popover.Content>\r\n                    <p>\r\n                      {props.lang === \"ar\"\r\n                        ? props.titles.map((x) => x.ar)[5] + \": \" + x.writer_ar\r\n                        : props.titles.map((x) => x.en)[5] + \": \" + x.writer_en}\r\n                    </p>\r\n                    <p>\r\n                      {props.lang === \"ar\"\r\n                        ? props.titles.map((x) => x.ar)[6] + \": \" + x.editor_ar\r\n                        : props.titles.map((x) => x.en)[6] + \": \" + x.editor_en}\r\n                    </p>\r\n                  </Popover.Content>\r\n                </Popover>\r\n              }\r\n            >\r\n              <button className=\"ms-2 btn btn-sm btn-light btnInfo\">\r\n                <FontAwesomeIcon className=\"fa-2x\" icon={faUserEdit} />\r\n              </button>\r\n            </OverlayTrigger>\r\n          </div>\r\n        );\r\n      })}\r\n      <div className=\"fb-videos\">\r\n        <h3 className=\"text-white body-title\">\r\n          {props.lang === \"ar\"\r\n            ? props.titles.map((x) => x.ar)[1]\r\n            : props.titles.map((x) => x.en)[1]}\r\n        </h3>\r\n        <div className=\"body-row\">\r\n          <div className=\"_row\" />\r\n        </div>\r\n        <div className=\"body-videos\">\r\n          <div\r\n            id=\"fb-video-1\"\r\n            className=\"fb-video\"\r\n            data-href={props.urls.map((x) => x.url)[4]}\r\n            data-width=\"300\"\r\n            data-show-text={false}\r\n            data-lazy={true}\r\n            data-allowfullscreen={true}\r\n          >\r\n            <blockquote\r\n              cite={\r\n                \"https://developers.facebook.com/\" +\r\n                props.urls.map((x) => x.url.slice(25))[4]\r\n              }\r\n              className=\"fb-xfbml-parse-ignore\"\r\n            >\r\n              <a\r\n                href={\r\n                  \"https://developers.facebook.com/\" +\r\n                  props.urls.map((x) => x.url.slice(25))[4]\r\n                }\r\n              >\r\n                {props.lang === \"ar\"\r\n                  ? props.paragraphs.map((x) => x.ar)[2]\r\n                  : props.paragraphs.map((x) => x.en)[2]}\r\n              </a>\r\n              <p>\r\n                {props.lang === \"ar\"\r\n                  ? props.titles.map((x) => x.ar)[3]\r\n                  : props.paragraphs.map((x) => x.en)[3]}\r\n              </p>\r\n            </blockquote>\r\n          </div>\r\n        </div>\r\n        <h3 className=\"text-white body-title\">\r\n          {props.lang === \"ar\"\r\n            ? props.titles.map((x) => x.ar)[2]\r\n            : props.titles.map((x) => x.en)[2]}\r\n        </h3>\r\n        <div className=\"body-row\">\r\n          <div className=\"_row\" />\r\n        </div>\r\n        <div className=\"body-videos\">\r\n          <div\r\n            id=\"fb-video-2\"\r\n            className=\"fb-video\"\r\n            data-href={props.urls.map((x) => x.url)[5]}\r\n            data-width=\"300\"\r\n            data-show-text=\"false\"\r\n            data-lazy={true}\r\n            data-allowfullscreen={true}\r\n          >\r\n            <blockquote\r\n              cite={\r\n                \"https://developers.facebook.com/\" +\r\n                props.urls.map((x) => x.url.slice(25))[5]\r\n              }\r\n              className=\"fb-xfbml-parse-ignore\"\r\n            >\r\n              <a\r\n                href={\r\n                  \"https://developers.facebook.com/\" +\r\n                  props.urls.map((x) => x.url.slice(25))[5]\r\n                }\r\n              >\r\n                {props.lang === \"ar\"\r\n                  ? props.paragraphs.map((x) => x.ar)[3]\r\n                  : props.paragraphs.map((x) => x.en)[3]}\r\n              </a>\r\n              <p>\r\n                {props.lang === \"ar\"\r\n                  ? props.titles.map((x) => x.ar)[4]\r\n                  : props.paragraphs.map((x) => x.en)[4]}\r\n              </p>\r\n            </blockquote>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"body-subscribe\">\r\n        <div className=\"d-grid button-subscribe\">\r\n          <button className=\"btn btn-light btn-lg body-btn\" type=\"button\">\r\n            <a\r\n              className=\"body-links\"\r\n              target=\"_blank\"\r\n              href={props.urls.map((x) => x.url)[6]}\r\n            >\r\n              <strong>\r\n                {props.lang === \"ar\"\r\n                  ? props.paragraphs.map((x) => x.ar)[4]\r\n                  : props.paragraphs.map((x) => x.en)[4]}\r\n              </strong>\r\n            </a>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n\r\nconst articlesArrayShape = PropTypes.shape({\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  link: PropTypes.string,\r\n  preview: PropTypes.string,\r\n  writor: PropTypes.string,\r\n  editor: PropTypes.string,\r\n});\r\n\r\nconst urlsArrayShape = PropTypes.shape({\r\n  id: PropTypes.string,\r\n  url: PropTypes.string,\r\n});\r\n\r\nconst titparaArrayShape = PropTypes.shape({\r\n  id: PropTypes.string,\r\n  ar: PropTypes.string,\r\n  en: PropTypes.string,\r\n});\r\n\r\nBody.propTypes = {\r\n  lang: PropTypes.string,\r\n  articles: PropTypes.arrayOf(articlesArrayShape),\r\n  urls: PropTypes.arrayOf(urlsArrayShape),\r\n  titles: PropTypes.arrayOf(titparaArrayShape),\r\n  paragraphs: PropTypes.arrayOf(titparaArrayShape),\r\n};\r\n\r\nBody.defaultProps = {\r\n  lang: \"ar\",\r\n};\r\n","F:\\2021\\1. RoundTrip's Landing Page\\App\\Front-End\\landing-page\\src\\App\\Dummy.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":34,"column":15,"nodeType":"61","endLine":38,"endColumn":16},{"ruleId":"59","severity":1,"message":"60","line":45,"column":15,"nodeType":"61","endLine":49,"endColumn":16},{"ruleId":"59","severity":1,"message":"60","line":26,"column":9,"nodeType":"61","endLine":26,"endColumn":43},{"ruleId":"59","severity":1,"message":"60","line":29,"column":9,"nodeType":"61","endLine":29,"endColumn":43},{"ruleId":"59","severity":1,"message":"60","line":32,"column":9,"nodeType":"61","endLine":32,"endColumn":43},{"ruleId":"59","severity":1,"message":"60","line":35,"column":9,"nodeType":"61","endLine":35,"endColumn":43},{"ruleId":"59","severity":1,"message":"60","line":52,"column":17,"nodeType":"61","endLine":52,"endColumn":73},{"ruleId":"59","severity":1,"message":"60","line":175,"column":13,"nodeType":"61","endLine":179,"endColumn":14},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation"]